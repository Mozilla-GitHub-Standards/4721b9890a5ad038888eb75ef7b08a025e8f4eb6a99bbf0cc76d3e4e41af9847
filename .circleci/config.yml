version: 2
jobs:
  build:
    docker:
      - image: docker:stable
    steps:
      - run:
          name: Install checkout deps
          command: |
            set -x
            apk update
            apk add git openssh

      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
          paths:
            - cached-docker-image.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i cached-docker-image.tar | true

      - run:
          name: Create version.json
          command: |
            # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

      - run:
          name: Build Docker image with cache
          command: |
            docker info
            docker build --cache-from="${CIRCLE_PROJECT_REPONAME}:build" -t ${CIRCLE_PROJECT_REPONAME}:build .

      - run:
          name: Save Docker image
          command: |
            docker save -o cached-docker-image.tar "${CIRCLE_PROJECT_REPONAME}:build"

      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - cached-docker-image.tar

      - store_artifacts:
          path: /${CIRCLE_PROJECT_REPONAME}/version.json

  lint:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
          paths:
            - cached-docker-image.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i cached-docker-image.tar | true

      - run:
          name: Run linter
          command: |
            docker run "${CIRCLE_PROJECT_REPONAME}:build" lint

  test:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
          paths:
            - cached-docker-image.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i cached-docker-image.tar | true

      - run:
          name: Run tests
          command: |
            docker run ${CIRCLE_PROJECT_REPONAME}:build test

  push:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
          paths:
            - cached-docker-image.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i cached-docker-image.tar | true

      - run:
          name: Push to Dockerhub
          command: |
            export DOCKER_IMAGE="mozilla/${CIRCLE_PROJECT_REPONAME}:latest"
            if [ -n "${CIRCLE_TAG}" ]; then
                export DOCKER_IMAGE="mozilla/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG}"
            fi
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ -n "${CIRCLE_TAG}" ]; then
                echo "${DOCKER_PASSWORD}" | docker login -u="${DOCKER_USERNAME}" --password-stdin
                docker tag "${CIRCLE_PROJECT_REPONAME}:build" "${DOCKER_IMAGE}"
                docker push "${DOCKER_IMAGE}"
            fi

workflows:
  version: 2

  # workflow jobs are _not_ run in tag builds by default
  # we use filters to whitelist jobs that should be run for tags

  # workflow jobs are run in _all_ branch builds by default
  # we use filters to blacklist jobs that shouldn't be run for a branch

  # see: https://circleci.com/docs/2.0/workflows/#git-tag-job-execution

  build-lint-test-push:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - push:
          requires:
            - build
            - test
            - lint
          filters:
            tags:
              only: /.*/
            branches:
              only: master
